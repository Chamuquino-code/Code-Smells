void method0() { 
public static final String KEY_TITLE = "GEM";
public static final String KEY_CONFIG_NAME = "CONFIG_NAME";
public static final String KEY_INIT_TEMPERATURE = "init temperature";
public static final String KEY_MIN_TEMPERATURE = "min temperature";
public static final String KEY_MAX_TEMPERATURE = "max temperature";
public static final String KEY_PREF_EDGE_LENGTH = "preferred Edge length";
public static final String KEY_GRAVITATION = "gravitation to barycenter";
public static final String KEY_RANDOM_IMPULSE_RANGE = "random impulse range";
public static final String KEY_COMPUTE_PERMUTATION = "compute permutation";
public static final String KEY_END_CONDITION_AVERAGE = "end condition average";
public static final String KEY_AVOID_OVERLAPPING = "avoid overlapping";
public static final String KEY_OVERLAPPING_DETECTION_WIDTH = "overlapping detection width";
public static final String KEY_OVERLAPPING_PREF_DISTANCE = "overlapping preferred distance";
public static final String KEY_ALPHA_OSC = "alpha oscillation";
public static final String KEY_ALPHA_ROT = "alpha rotation";
public static final String KEY_SIGMA_OSC = "sigma oscillation";
public static final String KEY_SIGMA_ROT = "sigma rotation";
public static final String KEY_OPTIMIZE_ALGORITHM_ENABLED = "optimization algorithm enabled";
public static final String KEY_OPTIMIZE_ALGORITHM_CONFIG = "optimization algorithm gpConfiguration";
public static final String KEY_LAYOUT_UPDATE_INIT_TEMPERATURE = "Layout Update init temperature";
public static final String KEY_LAYOUT_UPDATE_MIN_TEMPERATURE = "Layout Update min temperature";
public static final String KEY_LAYOUT_UPDATE_MAX_TEMPERATURE = "Layout Update max temperature";
public static final String KEY_LAYOUT_UPDATE_PREF_EDGE_LENGTH = "Layout Update preferred Edge length";
public static final String KEY_LAYOUT_UPDATE_GRAVITATION = "Layout Update gravitation to barycenter";
public static final String KEY_LAYOUT_UPDATE_RANDOM_IMPULSE_RANGE = "Layout Update random impulse range";
public static final String KEY_LAYOUT_UPDATE_COMPUTE_PERMUTATION = "Layout Update compute permutation";
public static final String KEY_LAYOUT_UPDATE_END_CONDITION_AVERAGE = "Layout Update end condition average";
public static final String KEY_LAYOUT_UPDATE_AVOID_OVERLAPPING = "Layout Update avoid overlapping";
public static final String KEY_LAYOUT_UPDATE_OVERLAPPING_DETECTION_WIDTH = "Layout Update overlapping detection width";
public static final String KEY_LAYOUT_UPDATE_OVERLAPPING_PREF_DISTANCE = "Layout Update overlapping preferred distance";
public static final String KEY_LAYOUT_UPDATE_ALPHA_ROT = "Layout Update alpha oscillation";
public static final String KEY_LAYOUT_UPDATE_ALPHA_OSC = "Layout Update alpha rotation";
public static final String KEY_LAYOUT_UPDATE_SIGMA_ROT = "Layout Update sigma oscillation";
public static final String KEY_LAYOUT_UPDATE_SIGMA_OSC = "Layout Update sigma rotation";
public static final String KEY_LAYOUT_UPDATE_ENABLED = "Layout Update enabled";
public static final String KEY_LAYOUT_UPDATE_METHOD = "Layout Update method";
public static final String KEY_LAYOUT_UPDATE_OPTIMIZE_ALGORITHM_ENABLED = "Layout Update optimization algorithm enabled";
public static final String KEY_LAYOUT_UPDATE_OPTIMIZE_ALGORITHM_CONFIG = "Layout Update optimization algorithm gpConfiguration";
public static final String KEY_LAYOUT_UPDATE_METHOD_NEIGHBORS_ONLY = "Neighbors only";
public static final String KEY_LAYOUT_UPDATE_METHOD_PERIMETERS = "Perimeter";
public static final String KEY_LAYOUT_UPDATE_DEPTH = "Layout Update depth";
public static final String KEY_LAYOUT_UPDATE_METHOD_PERIMETER_INIT_SIZE = "Layout Update method perimeter initial size";
public static final String KEY_LAYOUT_UPDATE_METHOD_PERIMETER_SIZE_INC = "Layout Update method perimeter size increase value";
public static final String KEY_LAYOUT_UPDATE_CLUSTERING_ENABLED = "clustering enabled";
public static final String KEY_LAYOUT_UPDATE_CLUSTERING_INIT_TEMPERATURE = "cluster init temperature";
public static final String KEY_LAYOUT_UPDATE_CLUSTERING_FORCE_SCALING_FACTOR = "clustering force scaling factor";
public static final String KEY_LAYOUT_UPDATE_CLUSTERING_FACTOR = "cluster size factor";
protected GEMLayoutAlgorithm layout;
private JTextField tf_initTemperature;
private JTextField tf_minTemperature;
private JTextField tf_maxTemperature;
private JTextField tf_prefEdgeLength;
private JTextField tf_gravitation;
private JTextField tf_randomImpulseRange;
private JTextField tf_overlapDetectWidth;
private JTextField tf_overlapPrefDistance;
private JTextField tf_alphaOsc;
private JTextField tf_alphaRot;
private JTextField tf_sigmaOsc;
private JTextField tf_sigmaRot;
private JTextField tf_lu_initTemperature;
private JTextField tf_lu_minTemperature;
private JTextField tf_lu_maxTemperature;
private JTextField tf_lu_prefEdgeLength;
private JTextField tf_lu_gravitation;
private JTextField tf_lu_randomImpulseRange;
private JTextField tf_lu_overlapDetectWidth;
private JTextField tf_lu_overlapPrefDistance;
private JTextField tf_lu_alphaOsc;
private JTextField tf_lu_alphaRot;
private JTextField tf_lu_sigmaOsc;
private JTextField tf_lu_sigmaRot;
private JTextField tf_lu_depth;
private JTextField tf_lu_cluster_initTemperature;
private JTextField tf_lu_cluster_forceScalingFactor;
private JTextField tf_lu_cluster_factor;
private JTextField tf_lu_perimeter_initSize;
private JTextField tf_lu_perimeter_sizeInc;
private JCheckBox cb_computePermutation;
private JCheckBox cb_endPerAverage;
private JCheckBox cb_avoidOverlapping;
private JCheckBox cb_useOptimizationAlg;
private JCheckBox cb_lu_enableLayoutUpdate;
private JCheckBox cb_lu_computePermutation;
private JCheckBox cb_lu_endPerAverage;
private JCheckBox cb_lu_avoidOverlapping;
private JCheckBox cb_lu_useOptimizationAlg;
private JCheckBox cb_lu_cluster_enable;
private JComboBox comb_lu_method;
private JComboBox comb_loadPreSets;
private JButton button_ConfigOptimizeAlg;
private JButton button_lu_ConfigOptimizeAlg;
private JPanel panelLayoutUpdate;
private JScrollPane panelLayoutRunWrapper;
private JScrollPane panelLayoutUpdateWrapper;
//private JPanel panelLUClusterWrapper; 
private Properties[] presetConfigs;
private AnnealingLayoutSettings optimizeAlgController;
private AnnealingLayoutSettings lu_optimizeAlgController;
private JTabbedPane tp_main;
}
