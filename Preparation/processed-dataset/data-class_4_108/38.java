//###########################################################################################  
// All method signatures and "// doc" below here are automatically created  
// by NetBeans (we used version 5.0).  Only change the method BODIES please,  
// as this will enable later re-use the NetBeans form editor to make changes in the GUI!  
//###########################################################################################  
/**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
// <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents  
private void initComponents() {
    splitPane = new javax.swing.JSplitPane();
    treeScrollPane = new javax.swing.JScrollPane();
    tree = new javax.swing.JTree();
    toolBar = new javax.swing.JToolBar();
    newButton = new javax.swing.JButton();
    openButton = new javax.swing.JButton();
    saveButton = new javax.swing.JButton();
    entityButton = new javax.swing.JButton();
    sessionButton = new javax.swing.JButton();
    relationButton = new javax.swing.JButton();
    businessMethodButton = new javax.swing.JButton();
    fieldButton = new javax.swing.JButton();
    deleteButton = new javax.swing.JButton();
    executeButton = new javax.swing.JButton();
    helpButton = new javax.swing.JButton();
    spacer = new javax.swing.JPanel();
    applicationFileInfoPanel = new javax.swing.JPanel();
    fileNameLabel = new javax.swing.JLabel();
    databaseConnectionInfoPanel = new javax.swing.JPanel();
    databaseConnectionLabel = new javax.swing.JLabel();
    desktopConsoleSplitPane = new javax.swing.JSplitPane();
    desktopPane = new javax.swing.JDesktopPane();
    consoleScrollPane = new javax.swing.JScrollPane();
    console = new javax.swing.JTextPane();
    textConsole = new javax.swing.JTextArea();
    menuBar = new javax.swing.JMenuBar();
    fileMenu = new javax.swing.JMenu();
    newMenuItem = new javax.swing.JMenuItem();
    openMenuItem = new javax.swing.JMenuItem();
    importMenuItem = new javax.swing.JMenuItem();
    jSeparator1 = new javax.swing.JSeparator();
    saveMenuItem = new javax.swing.JMenuItem();
    saveAsMenuItem = new javax.swing.JMenuItem();
    exportMenuItem = new javax.swing.JMenuItem();
    jSeparator2 = new javax.swing.JSeparator();
    generateJavaApplicationAsMenuItem = new javax.swing.JMenuItem();
    jSeparator3 = new javax.swing.JSeparator();
    exitMenuItem = new javax.swing.JMenuItem();
    editMenu = new javax.swing.JMenu();
    addSubMenu = new javax.swing.JMenu();
    addEntityMenuItem = new javax.swing.JMenuItem();
    addSessionMenuItem = new javax.swing.JMenuItem();
    addRelationMenuItem = new javax.swing.JMenuItem();
    addBusinessMenuItem = new javax.swing.JMenuItem();
    addFieldMenuItem = new javax.swing.JMenuItem();
    deleteMenuItem = new javax.swing.JMenuItem();
    connectionMenu = new javax.swing.JMenu();
    driverManagerMenuItem = new javax.swing.JMenuItem();
    jSeparator4 = new javax.swing.JSeparator();
    connectMenuItem = new javax.swing.JMenuItem();
    disconnectMenuItem = new javax.swing.JMenuItem();
    helpMenu = new javax.swing.JMenu();
    aboutMenuItem = new javax.swing.JMenuItem();
    contentMenuItem = new javax.swing.JMenuItem();
    splitPane.setBorder(null);
    splitPane.setDividerLocation(400);
    splitPane.setDividerSize(3);
    splitPane.setContinuousLayout(true);
    splitPane.setOpaque(false);
    splitPane.setVerifyInputWhenFocusTarget(false);
    tree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {

        public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
            treeValueChanged(evt);
        }
    });
    treeScrollPane.setViewportView(tree);
    splitPane.setLeftComponent(treeScrollPane);
    addWindowListener(new java.awt.event.WindowAdapter() {

        public void windowClosing(java.awt.event.WindowEvent evt) {
            exitForm(evt);
        }
    });
    toolBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    toolBar.setFloatable(false);
    toolBar.setName("toolBar");
    newButton.setIcon(new javax.swing.ImageIcon("../images/new.png"));
    newButton.setText(" ");
    newButton.setToolTipText("New JAG application");
    newButton.setBorder(null);
    newButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            newMenuItemActionPerformed(evt);
        }
    });
    toolBar.add(newButton);
    openButton.setIcon(new javax.swing.ImageIcon("../images/open.png"));
    openButton.setText(" ");
    openButton.setToolTipText("Open a JAG application file");
    openButton.setBorder(null);
    openButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            openMenuItemActionPerformed(evt);
        }
    });
    toolBar.add(openButton);
    saveButton.setIcon(new javax.swing.ImageIcon("../images/save.png"));
    saveButton.setText(" ");
    saveButton.setToolTipText("Save");
    saveButton.setBorder(null);
    saveButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveButtonActionPerformed(evt);
        }
    });
    toolBar.add(saveButton);
    toolBar.addSeparator();
    entityButton.setIcon(new javax.swing.ImageIcon("../images/entity.png"));
    entityButton.setText(" ");
    entityButton.setToolTipText("New entity bean");
    entityButton.setBorder(null);
    entityButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addEntityMenuItemActionPerformed(evt);
        }
    });
    toolBar.add(entityButton);
    sessionButton.setIcon(new javax.swing.ImageIcon("../images/session.png"));
    sessionButton.setText(" ");
    sessionButton.setToolTipText("New service bean");
    sessionButton.setBorder(null);
    sessionButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addSessionMenuItemActionPerformed(evt);
        }
    });
    toolBar.add(sessionButton);
    relationButton.setIcon(new javax.swing.ImageIcon("../images/relation.png"));
    relationButton.setText(" ");
    relationButton.setToolTipText("New relation");
    relationButton.setBorder(null);
    relationButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addRelationPopupMenuItemActionPerformed(evt);
        }
    });
    toolBar.add(relationButton);
    businessMethodButton.setIcon(new javax.swing.ImageIcon("../images/business.png"));
    businessMethodButton.setText(" ");
    businessMethodButton.setToolTipText("New business method");
    businessMethodButton.setBorder(null);
    businessMethodButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            businessMethodButtonActionPerformed(evt);
        }
    });
    toolBar.add(businessMethodButton);
    fieldButton.setIcon(new javax.swing.ImageIcon("../images/field.png"));
    fieldButton.setText(" ");
    fieldButton.setToolTipText("New entity field");
    fieldButton.setBorder(null);
    fieldButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            fieldButtonActionPerformed(evt);
        }
    });
    toolBar.add(fieldButton);
    deleteButton.setIcon(new javax.swing.ImageIcon("../images/delete.png"));
    deleteButton.setText(" ");
    deleteButton.setToolTipText("Delete");
    deleteButton.setBorder(null);
    deleteButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteMenuItemActionPerformed(evt);
        }
    });
    toolBar.add(deleteButton);
    toolBar.addSeparator();
    executeButton.setIcon(new javax.swing.ImageIcon("../images/execute.png"));
    executeButton.setText(" ");
    executeButton.setToolTipText("Generate the application");
    executeButton.setBorder(null);
    executeButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            generateJavaApplicationAsMenuItemActionPerformed(evt);
        }
    });
    toolBar.add(executeButton);
    toolBar.addSeparator();
    helpButton.setIcon(new javax.swing.ImageIcon("../images/help.png"));
    helpButton.setText(" ");
    helpButton.setToolTipText("Help");
    helpButton.setBorder(null);
    helpButton.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            contentMenuItemActionPerformed(evt);
        }
    });
    toolBar.add(helpButton);
    spacer.setLayout(null);
    toolBar.add(spacer);
    applicationFileInfoPanel.setName("fileStatusComponent");
    fileNameLabel.setText("Application file:");
    fileNameLabel.setToolTipText("File name of the XML skelet");
    fileNameLabel.setName("fileNameLabel");
    applicationFileInfoPanel.add(fileNameLabel);
    toolBar.add(applicationFileInfoPanel);
    databaseConnectionInfoPanel.setName("databaseConnectionComponent");
    databaseConnectionLabel.setText("Database Connection:");
    databaseConnectionLabel.setName("databaseConnectionLabel");
    databaseConnectionInfoPanel.add(databaseConnectionLabel);
    toolBar.add(databaseConnectionInfoPanel);
    getContentPane().add(toolBar, java.awt.BorderLayout.NORTH);
    desktopConsoleSplitPane.setDividerLocation(590);
    desktopConsoleSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
    desktopConsoleSplitPane.setTopComponent(desktopPane);
    console.setBackground(new java.awt.Color(204, 204, 204));
    console.setEditable(false);
    console.setFont(new java.awt.Font("Lucida Console", 0, 10));
    console.setForeground(new java.awt.Color(0, 0, 1));
    consoleScrollPane.setViewportView(console);
    textConsole.setColumns(20);
    textConsole.setRows(5);
    consoleScrollPane.setViewportView(textConsole);
    desktopConsoleSplitPane.setBottomComponent(consoleScrollPane);
    getContentPane().add(desktopConsoleSplitPane, java.awt.BorderLayout.CENTER);
    fileMenu.setMnemonic(KeyEvent.VK_F);
    fileMenu.setText("File");
    newMenuItem.setMnemonic(KeyEvent.VK_N);
    newMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_MASK));
    newMenuItem.setText("New");
    newMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            newMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(newMenuItem);
    openMenuItem.setMnemonic(KeyEvent.VK_O);
    openMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK));
    openMenuItem.setText("Open");
    openMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            openMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(openMenuItem);
    importMenuItem.setMnemonic(KeyEvent.VK_I);
    importMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_I, KeyEvent.CTRL_MASK));
    importMenuItem.setText("Import UML model..");
    importMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            importMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(importMenuItem);
    fileMenu.add(jSeparator1);
    saveMenuItem.setMnemonic(KeyEvent.VK_S);
    saveMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, KeyEvent.CTRL_MASK));
    saveMenuItem.setText("Save");
    saveMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(saveMenuItem);
    saveAsMenuItem.setMnemonic(KeyEvent.VK_A);
    saveAsMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0));
    saveAsMenuItem.setText("Save As ...");
    saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveAsMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(saveAsMenuItem);
    exportMenuItem.setMnemonic(KeyEvent.VK_E);
    exportMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_E, KeyEvent.CTRL_MASK));
    exportMenuItem.setText("Export UML model..");
    exportMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exportMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(exportMenuItem);
    fileMenu.add(jSeparator2);
    generateJavaApplicationAsMenuItem.setMnemonic(KeyEvent.VK_G);
    generateJavaApplicationAsMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0));
    generateJavaApplicationAsMenuItem.setText("Generate application...");
    generateJavaApplicationAsMenuItem.setToolTipText("Generate a J2EE Applicatin");
    generateJavaApplicationAsMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            generateJavaApplicationAsMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(generateJavaApplicationAsMenuItem);
    fileMenu.add(jSeparator3);
    exitMenuItem.setMnemonic(KeyEvent.VK_X);
    exitMenuItem.setText("Exit");
    exitMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(exitMenuItem);
    menuBar.add(fileMenu);
    editMenu.setMnemonic(KeyEvent.VK_E);
    editMenu.setText("Edit");
    editMenu.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            editMenuActionPerformed(evt);
        }
    });
    addSubMenu.setText("Add");
    addEntityMenuItem.setMnemonic(KeyEvent.VK_1);
    addEntityMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_1, KeyEvent.CTRL_MASK));
    addEntityMenuItem.setText("entity bean");
    addEntityMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addEntityMenuItemActionPerformed(evt);
        }
    });
    addSubMenu.add(addEntityMenuItem);
    addSessionMenuItem.setMnemonic(KeyEvent.VK_2);
    addSessionMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_2, KeyEvent.CTRL_MASK));
    addSessionMenuItem.setText("service bean");
    addSessionMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addSessionMenuItemActionPerformed(evt);
        }
    });
    addSubMenu.add(addSessionMenuItem);
    addRelationMenuItem.setMnemonic(KeyEvent.VK_3);
    addRelationMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_3, KeyEvent.CTRL_MASK));
    addRelationMenuItem.setText("relation");
    addRelationMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addRelationPopupMenuItemActionPerformed(evt);
        }
    });
    addSubMenu.add(addRelationMenuItem);
    addBusinessMenuItem.setMnemonic(KeyEvent.VK_4);
    addBusinessMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_4, KeyEvent.CTRL_MASK));
    addBusinessMenuItem.setText("business");
    addBusinessMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addBusinessMenuItemActionPerformed(evt);
        }
    });
    addSubMenu.add(addBusinessMenuItem);
    addFieldMenuItem.setMnemonic(KeyEvent.VK_5);
    addFieldMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_5, KeyEvent.CTRL_MASK));
    addFieldMenuItem.setText("field");
    addFieldMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addFieldMenuItemActionPerformed(evt);
        }
    });
    addSubMenu.add(addFieldMenuItem);
    editMenu.add(addSubMenu);
    deleteMenuItem.setMnemonic(KeyEvent.VK_D);
    deleteMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, KeyEvent.CTRL_MASK));
    deleteMenuItem.setText(" Delete");
    deleteMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteMenuItemActionPerformed(evt);
        }
    });
    editMenu.add(deleteMenuItem);
    menuBar.add(editMenu);
    connectionMenu.setMnemonic(KeyEvent.VK_D);
    connectionMenu.setText("Database");
    driverManagerMenuItem.setText("Driver Manager..");
    driverManagerMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            driverManagerMenuItemActionPerformed(evt);
        }
    });
    connectionMenu.add(driverManagerMenuItem);
    connectionMenu.add(jSeparator4);
    connectMenuItem.setText("Create connection...");
    connectMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            connectMenuItemActionPerformed(evt);
        }
    });
    connectionMenu.add(connectMenuItem);
    disconnectMenuItem.setText("Disconnect");
    disconnectMenuItem.setEnabled(false);
    disconnectMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            disconnectMenuItemActionPerformed(evt);
        }
    });
    connectionMenu.add(disconnectMenuItem);
    menuBar.add(connectionMenu);
    helpMenu.setMnemonic(KeyEvent.VK_H);
    helpMenu.setText("Help");
    aboutMenuItem.setText("About");
    aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            aboutMenuItemActionPerformed(evt);
        }
    });
    helpMenu.add(aboutMenuItem);
    contentMenuItem.setMnemonic(KeyEvent.VK_C);
    contentMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0));
    contentMenuItem.setText("Content");
    contentMenuItem.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            contentMenuItemActionPerformed(evt);
        }
    });
    helpMenu.add(contentMenuItem);
    menuBar.add(helpMenu);
    setJMenuBar(menuBar);
    pack();
}
